<?xml version="1.0"?>
<doc>
    <assembly>
        <name>MvvmHelpers</name>
    </assembly>
    <members>
        <member name="T:MvvmHelpers.BaseViewModel">
            <summary>
            Base view model.
            </summary>
        </member>
        <member name="P:MvvmHelpers.BaseViewModel.Title">
            <summary>
            Gets or sets the title.
            </summary>
            <value>The title.</value>
        </member>
        <member name="P:MvvmHelpers.BaseViewModel.Subtitle">
            <summary>
            Gets or sets the subtitle.
            </summary>
            <value>The subtitle.</value>
        </member>
        <member name="P:MvvmHelpers.BaseViewModel.Icon">
            <summary>
            Gets or sets the icon.
            </summary>
            <value>The icon.</value>
        </member>
        <member name="P:MvvmHelpers.BaseViewModel.IsBusy">
            <summary>
            Gets or sets a value indicating whether this instance is busy.
            </summary>
            <value><c>true</c> if this instance is busy; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MvvmHelpers.BaseViewModel.IsNotBusy">
            <summary>
            Gets or sets a value indicating whether this instance is not busy.
            </summary>
            <value><c>true</c> if this instance is not busy; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MvvmHelpers.BaseViewModel.CanLoadMore">
            <summary>
            Gets or sets a value indicating whether this instance can load more.
            </summary>
            <value><c>true</c> if this instance can load more; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MvvmHelpers.BaseViewModel.Header">
            <summary>
            Gets or sets the header.
            </summary>
            <value>The header.</value>
        </member>
        <member name="P:MvvmHelpers.BaseViewModel.Footer">
            <summary>
            Gets or sets the footer.
            </summary>
            <value>The footer.</value>
        </member>
        <member name="T:MvvmHelpers.Grouping`2">
            <summary>
            Grouping of items by key into ObservableRange
            </summary>
        </member>
        <member name="P:MvvmHelpers.Grouping`2.Key">
            <summary>
            Gets the key.
            </summary>
            <value>The key.</value>
        </member>
        <member name="P:MvvmHelpers.Grouping`2.Items">
            <summary>
            Returns list of items in the grouping.
            </summary>
        </member>
        <member name="M:MvvmHelpers.Grouping`2.#ctor(`0,System.Collections.Generic.IEnumerable{`1})">
            <summary>
            Initializes a new instance of the Grouping class.
            </summary>
            <param name="key">Key.</param>
            <param name="items">Items.</param>
        </member>
        <member name="T:MvvmHelpers.Grouping`3">
            <summary>
            Grouping of items by key into ObservableRange
            </summary>
        </member>
        <member name="P:MvvmHelpers.Grouping`3.Key">
            <summary>
            Gets the key.
            </summary>
            <value>The key.</value>
        </member>
        <member name="P:MvvmHelpers.Grouping`3.SubKey">
            <summary>
            Gets the subkey of the grouping
            </summary>
        </member>
        <member name="P:MvvmHelpers.Grouping`3.Items">
            <summary>
            Returns list of items in the grouping.
            </summary>
        </member>
        <member name="M:MvvmHelpers.Grouping`3.#ctor(`0,`1,System.Collections.Generic.IEnumerable{`2})">
            <summary>
            Initializes a new instance of the Grouping class.
            </summary>
            <param name="key">Key.</param>
            <param name="subkey">Subkey</param>
            <param name="items">Items.</param>
        </member>
        <member name="T:MvvmHelpers.ObservableObject">
            <summary>
            Observable object with INotifyPropertyChanged implemented
            </summary>
        </member>
        <member name="M:MvvmHelpers.ObservableObject.SetProperty``1(``0@,``0,System.String,System.Action)">
            <summary>
            Sets the property.
            </summary>
            <returns><c>true</c>, if property was set, <c>false</c> otherwise.</returns>
            <param name="backingStore">Backing store.</param>
            <param name="value">Value.</param>
            <param name="propertyName">Property name.</param>
            <param name="onChanged">On changed.</param>
            <typeparam name="T">The 1st type parameter.</typeparam>
        </member>
        <member name="E:MvvmHelpers.ObservableObject.PropertyChanged">
            <summary>
            Occurs when property changed.
            </summary>
        </member>
        <member name="M:MvvmHelpers.ObservableObject.OnPropertyChanged(System.String)">
            <summary>
            Raises the property changed event.
            </summary>
            <param name="propertyName">Property name.</param>
        </member>
        <member name="T:MvvmHelpers.ObservableRangeCollection`1">
            <summary> 
            Represents a dynamic data collection that provides notifications when items get added, removed, or when the whole list is refreshed. 
            </summary> 
            <typeparam name="T"></typeparam> 
        </member>
        <member name="M:MvvmHelpers.ObservableRangeCollection`1.#ctor">
            <summary> 
            Initializes a new instance of the System.Collections.ObjectModel.ObservableCollection(Of T) class. 
            </summary> 
        </member>
        <member name="M:MvvmHelpers.ObservableRangeCollection`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
            <summary> 
            Initializes a new instance of the System.Collections.ObjectModel.ObservableCollection(Of T) class that contains elements copied from the specified collection. 
            </summary> 
            <param name="collection">collection: The collection from which the elements are copied.</param> 
            <exception cref="T:System.ArgumentNullException">The collection parameter cannot be null.</exception> 
        </member>
        <member name="M:MvvmHelpers.ObservableRangeCollection`1.AddRange(System.Collections.Generic.IEnumerable{`0},System.Collections.Specialized.NotifyCollectionChangedAction)">
            <summary> 
            Adds the elements of the specified collection to the end of the ObservableCollection(Of T). 
            </summary> 
        </member>
        <member name="M:MvvmHelpers.ObservableRangeCollection`1.RemoveRange(System.Collections.Generic.IEnumerable{`0},System.Collections.Specialized.NotifyCollectionChangedAction)">
            <summary> 
            Removes the first occurence of each item in the specified collection from ObservableCollection(Of T). NOTE: with notificationMode = Remove, removed items starting index is not set because items are not guaranteed to be consecutive.
            </summary> 
        </member>
        <member name="M:MvvmHelpers.ObservableRangeCollection`1.Replace(`0)">
            <summary> 
            Clears the current collection and replaces it with the specified item. 
            </summary> 
        </member>
        <member name="M:MvvmHelpers.ObservableRangeCollection`1.ReplaceRange(System.Collections.Generic.IEnumerable{`0})">
            <summary> 
            Clears the current collection and replaces it with the specified collection. 
            </summary> 
        </member>
        <member name="T:MvvmHelpers.Utils">
            <summary>
            Extension Utils
            </summary>
        </member>
        <member name="M:MvvmHelpers.Utils.WithTimeout``1(System.Threading.Tasks.Task{``0},System.Int32)">
            <summary>
            Task extension to add a timeout.
            </summary>
            <returns>The task with timeout.</returns>
            <param name="task">Task.</param>
            <param name="timeoutInMilliseconds">Timeout duration in Milliseconds.</param>
            <typeparam name="T">The 1st type parameter.</typeparam>
        </member>
        <member name="M:MvvmHelpers.Utils.WithTimeout``1(System.Threading.Tasks.Task{``0},System.TimeSpan)">
            <summary>
            Task extension to add a timeout.
            </summary>
            <returns>The task with timeout.</returns>
            <param name="task">Task.</param>
            <param name="timeout">Timeout Duration.</param>
            <typeparam name="T">The 1st type parameter.</typeparam>
        </member>
    </members>
</doc>
